# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import common_pb2 as common__pb2
import inspectorSync_pb2 as inspectorSync__pb2


class inspectorSyncStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.startBroadcast = channel.unary_unary(
        '/helmsley.inspectorSync/startBroadcast',
        request_serializer=common__pb2.Request.SerializeToString,
        response_deserializer=common__pb2.commonResponse.FromString,
        )
    self.gsVolumePose = channel.unary_unary(
        '/helmsley.inspectorSync/gsVolumePose',
        request_serializer=inspectorSync__pb2.VPMsg.SerializeToString,
        response_deserializer=common__pb2.commonResponse.FromString,
        )
    self.setGestureOp = channel.unary_unary(
        '/helmsley.inspectorSync/setGestureOp',
        request_serializer=inspectorSync__pb2.GestureOp.SerializeToString,
        response_deserializer=common__pb2.commonResponse.FromString,
        )
    self.getOperations = channel.unary_stream(
        '/helmsley.inspectorSync/getOperations',
        request_serializer=common__pb2.Request.SerializeToString,
        response_deserializer=inspectorSync__pb2.OperationResponse.FromString,
        )


class inspectorSyncServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def startBroadcast(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def gsVolumePose(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setGestureOp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOperations(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_inspectorSyncServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'startBroadcast': grpc.unary_unary_rpc_method_handler(
          servicer.startBroadcast,
          request_deserializer=common__pb2.Request.FromString,
          response_serializer=common__pb2.commonResponse.SerializeToString,
      ),
      'gsVolumePose': grpc.unary_unary_rpc_method_handler(
          servicer.gsVolumePose,
          request_deserializer=inspectorSync__pb2.VPMsg.FromString,
          response_serializer=common__pb2.commonResponse.SerializeToString,
      ),
      'setGestureOp': grpc.unary_unary_rpc_method_handler(
          servicer.setGestureOp,
          request_deserializer=inspectorSync__pb2.GestureOp.FromString,
          response_serializer=common__pb2.commonResponse.SerializeToString,
      ),
      'getOperations': grpc.unary_stream_rpc_method_handler(
          servicer.getOperations,
          request_deserializer=common__pb2.Request.FromString,
          response_serializer=inspectorSync__pb2.OperationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helmsley.inspectorSync', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
